{
    "swagger": "2.0",
    "info": {
        "description": "This is the Geld.Network Server.",
        "title": "Geld.Network API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/api/health": {
            "get": {
                "description": "Checks if the server is up and running",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Test Server Health",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.HealthCheckResponse"
                        }
                    }
                }
            }
        },
        "/appuser/admin/{userid}": {
            "get": {
                "description": "Retrieves paginated user data associated with a specific admin user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get Paginated User Data",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "UserID",
                        "name": "userid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default from env: PAGINATION_DEFUALT_LIMIT)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Requested page (default from env: PAGINATION_DEFAULT_PAGE)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Sort order (-1: Desc, 1: Asc, default from env: PAGINATION_DEFAULT_SORT)",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ResultResponse"
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ResultResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/appuser/remove/{_id}": {
            "delete": {
                "description": "Delete an existing Geld user By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete user By ID",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/appuser/save": {
            "post": {
                "description": "Creates Users for specific designations within the pilot phase of Project Geld",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create and Save Users in Project Geld",
                "parameters": [
                    {
                        "description": "User Details",
                        "name": "usersBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ResultResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/appuser/{_id}": {
            "get": {
                "description": "Get an existing Geld user By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user By ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ResultResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/geldtemplate/html/{plotid}": {
            "get": {
                "description": "Get an existing HTML for token generation By Plot ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "data template"
                ],
                "summary": "Get HTML By Plot ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "PlotID",
                        "name": "plotid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ResultResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/geldtemplate/plotid/{plotid}": {
            "get": {
                "description": "Get an existing Data Template By Plot ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "data template"
                ],
                "summary": "Get Data Template By Plot ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "PlotID",
                        "name": "plotid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ResultResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/geldtemplate/save": {
            "post": {
                "description": "The Data Templates aacount for 1 stage which consists of master data and real time data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "data template"
                ],
                "summary": "Save Data Templates submitted by the Geld App",
                "parameters": [
                    {
                        "description": "Data Template Details",
                        "name": "dataTemplateBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ResultResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/geldtemplate/{_id}": {
            "get": {
                "description": "Get an existing Data Template By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "data template"
                ],
                "summary": "Get Data Template By ID",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/masterdata/remove/{_id}": {
            "delete": {
                "description": "Delete an existing Master Data Container By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "master data container"
                ],
                "summary": "Delete Master Data Container By ID",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/masterdata/save": {
            "post": {
                "description": "This creates a container to whole master data records per type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "master data container"
                ],
                "summary": "Save Master Data Container submitted by Geld Configurations",
                "parameters": [
                    {
                        "description": "Master Data Container Details",
                        "name": "masterDataContainerBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.MasterData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ResultResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/masterdata/{_id}": {
            "get": {
                "description": "Get an existing Master Data Container ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "master data container"
                ],
                "summary": "Get Master Data by ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ResultResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/masterrecord/{dataid}": {
            "get": {
                "description": "Retrieves paginated data collection associated with a specific dataID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "data collection"
                ],
                "summary": "Get Paginated data collection",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "DataID",
                        "name": "dataid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default from env: PAGINATION_DEFUALT_LIMIT)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Requested page (default from env: PAGINATION_DEFAULT_PAGE)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Sort order (-1: Desc, 1: Asc, default from env: PAGINATION_DEFAULT_SORT)",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ResultResponse"
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ResultResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/record/remove/{_id}": {
            "delete": {
                "description": "Delete an existing Master Data Record By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "data collection"
                ],
                "summary": "Delete Master Data Records By ID",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/record/save": {
            "post": {
                "description": "This creates a collections for Master Data Containers based on container type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "data collection"
                ],
                "summary": "Save Data Collection for Master Data Container",
                "parameters": [
                    {
                        "description": "Data Collection Details",
                        "name": "dataCollectionBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.DataCollection"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ResultResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/record/{_id}": {
            "get": {
                "description": "Get an existing Record Data By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "data collection"
                ],
                "summary": "Get Record Data By ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ResultResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/records/{dataid}": {
            "get": {
                "description": "Get an existing Record Data By Master Data ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "data collection"
                ],
                "summary": "Get Record Data By Master Data ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "DataID",
                        "name": "dataid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ResultResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/stage/remove/{_id}": {
            "delete": {
                "description": "Delete an existing Stage By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stages"
                ],
                "summary": "Delete Stage By ID",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/stage/save": {
            "post": {
                "description": "Creates Stages with Fields unique to it for data input labels by Geld App",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stages"
                ],
                "summary": "Create and Save Stages for Workflows",
                "parameters": [
                    {
                        "description": "Stage Details",
                        "name": "stagesBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Stages"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ResultResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/stage/{_id}": {
            "get": {
                "description": "Get existing Stage By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stages"
                ],
                "summary": "Get Stage By ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ResultResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/token/save": {
            "post": {
                "description": "Gets a timeline of data templates and creates a token per plot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tokens"
                ],
                "summary": "Create and Save Tokens per Plot",
                "parameters": [
                    {
                        "description": "Token Details",
                        "name": "tokensBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TokenPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ResultResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/token/{_id}": {
            "get": {
                "description": "Get Existing Token By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tokens"
                ],
                "summary": "Get Token By ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responseDtos.ResultResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responseDtos.ErrorResponse"
                            }
                        }
                    }
                }
            }
        },
        "/tokens/updatestatus": {
            "put": {
                "description": "Update Token Status based on if it has been minted or sold and bought",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tokens"
                ],
                "summary": "Update Token Status",
                "parameters": [
                    {
                        "description": "Token Details",
                        "name": "tokensBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requestDtos.UpdateToken"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ResultResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tokens/{status}": {
            "get": {
                "description": "Retrieves paginated token data associated with a specific status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tokens"
                ],
                "summary": "Get Paginated Token Data",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Status",
                        "name": "status",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default from env: PAGINATION_DEFUALT_LIMIT)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Requested page (default from env: PAGINATION_DEFAULT_PAGE)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Sort order (-1: Desc, 1: Asc, default from env: PAGINATION_DEFAULT_SORT)",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ResultResponse"
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ResultResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/updatemasterdata": {
            "put": {
                "description": "Update an exisiting Master Data Container",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "master data container"
                ],
                "summary": "Update Master Data Container",
                "parameters": [
                    {
                        "description": "Master Data Container Details",
                        "name": "masterDataContainerBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requestDtos.UpdateMasterData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ResultResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/updaterecords": {
            "put": {
                "description": "Update an exisiting Master Data Container",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "data collection"
                ],
                "summary": "Update Master Data Container",
                "parameters": [
                    {
                        "description": "Data Collection Details",
                        "name": "dataCollectionBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requestDtos.UpdateDataCollection"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ResultResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/updatestage": {
            "put": {
                "description": "Update an exisiting Stages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stages"
                ],
                "summary": "Update Stage Data",
                "parameters": [
                    {
                        "description": "Stage Details",
                        "name": "stagesBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requestDtos.UpdateStages"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ResultResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/updateuser": {
            "put": {
                "description": "Update geld user details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update User Details",
                "parameters": [
                    {
                        "description": "User Details",
                        "name": "usersBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requestDtos.UpdateUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ResultResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/updateworkflow": {
            "put": {
                "description": "Update Workflow details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workflows"
                ],
                "summary": "Update Workflow Details",
                "parameters": [
                    {
                        "description": "Workflow Details",
                        "name": "workflowsBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requestDtos.UpdateWorkflow"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ResultResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/usermasterdata/{userid}": {
            "get": {
                "description": "Retrieves paginated master data associated with a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "master data container"
                ],
                "summary": "Get Paginated master data",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "UserID",
                        "name": "userid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default from env: PAGINATION_DEFUALT_LIMIT)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Requested page (default from env: PAGINATION_DEFAULT_PAGE)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Sort order (-1: Desc, 1: Asc, default from env: PAGINATION_DEFAULT_SORT)",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ResultResponse"
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ResultResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/userstage/{userid}": {
            "get": {
                "description": "Retrieves paginated Stage data associated with a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stages"
                ],
                "summary": "Get Paginated Stage Data",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "UserID",
                        "name": "userid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default from env: PAGINATION_DEFUALT_LIMIT)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Requested page (default from env: PAGINATION_DEFAULT_PAGE)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Sort order (-1: Desc, 1: Asc, default from env: PAGINATION_DEFAULT_SORT)",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ResultResponse"
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ResultResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/userworkflows/{userid}": {
            "get": {
                "description": "Retrieves paginated workflow data associated with a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workflows"
                ],
                "summary": "Get Paginated Workflow Data",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "UserID",
                        "name": "userid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default from env: PAGINATION_DEFUALT_LIMIT)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Requested page (default from env: PAGINATION_DEFAULT_PAGE)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Sort order (-1: Desc, 1: Asc, default from env: PAGINATION_DEFAULT_SORT)",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ResultResponse"
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ResultResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/workflows/remove/{_id}": {
            "delete": {
                "description": "Delete an existing workflow By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workflows"
                ],
                "summary": "Delete workflow By ID",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/workflows/save": {
            "post": {
                "description": "Creates workflows to have a series of stages to map plot chain management",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workflows"
                ],
                "summary": "Create and Save Workflows for Plots",
                "parameters": [
                    {
                        "description": "Workflow Details",
                        "name": "workflowsBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Workflows"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ResultResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/workflows/{_id}": {
            "get": {
                "description": "Get an existing workflow By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workflows"
                ],
                "summary": "Get workflow By ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ResultResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responseDtos.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.DataCollection": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "collectionname": {
                    "type": "string"
                },
                "contact": {
                    "type": "string"
                },
                "dataid": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "purpose": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "userid": {
                    "type": "string"
                }
            }
        },
        "model.MasterData": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "dataname": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "userid": {
                    "type": "string"
                }
            }
        },
        "model.Stages": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "stagename": {
                    "type": "string"
                },
                "userid": {
                    "type": "string"
                }
            }
        },
        "model.TokenPayload": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "bchash": {
                    "type": "string"
                },
                "bcstatus": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "filetype": {
                    "type": "string"
                },
                "plotid": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                },
                "tokenhash": {
                    "type": "string"
                },
                "tokenname": {
                    "type": "string"
                },
                "tokenpayload": {
                    "type": "string"
                }
            }
        },
        "model.UserPayload": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "contact": {
                    "type": "string"
                },
                "designation": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "encpw": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "userid": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.Workflows": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "stages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userid": {
                    "type": "string"
                },
                "workflowname": {
                    "type": "string"
                }
            }
        },
        "requestDtos.UpdateDataCollection": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "collectionname": {
                    "type": "string"
                },
                "contact": {
                    "type": "string"
                },
                "dataid": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "purpose": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "userid": {
                    "type": "string"
                }
            }
        },
        "requestDtos.UpdateMasterData": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "dataname": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "userid": {
                    "type": "string"
                }
            }
        },
        "requestDtos.UpdateStages": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "stagename": {
                    "type": "string"
                },
                "userid": {
                    "type": "string"
                }
            }
        },
        "requestDtos.UpdateToken": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "requestDtos.UpdateUser": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "contact": {
                    "type": "string"
                },
                "designation": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "encpw": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "userid": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "requestDtos.UpdateWorkflow": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "stages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userid": {
                    "type": "string"
                },
                "workflowname": {
                    "type": "string"
                }
            }
        },
        "responseDtos.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "responseDtos.HealthCheckResponse": {
            "type": "object",
            "properties": {
                "note": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "responseDtos.ResultResponse": {
            "type": "object",
            "properties": {
                "Response": {},
                "Status": {
                    "type": "integer"
                }
            }
        }
    }
}